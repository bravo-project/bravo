#!/bin/bash

BRAVOD="/usr/local/bravod-default/bin/bravod"

VERSION=`cat /etc/bravodversion`

if [[ "$USE_WAY_TOO_MUCH_RAM" ]]; then
    BRAVOD="/usr/local/bravod-full/bin/bravod"
fi

chown -R bravod:bravod $HOME

# seed nodes come from doc/seednodes.txt which is
# installed by docker into /etc/bravod/seednodes.txt
SEED_NODES="$(cat /etc/bravod/seednodes.txt | awk -F' ' '{print $1}')"

ARGS=""

# if user did not pass in any desired
# seed nodes, use the ones above:
if [[ -z "$BRAVOD_SEED_NODES" ]]; then
    for NODE in $SEED_NODES ; do
        ARGS+=" --seed-node=$NODE"
    done
fi

# if user did pass in desired seed nodes, use
# the ones the user specified:
if [[ ! -z "$BRAVOD_SEED_NODES" ]]; then
    for NODE in $BRAVOD_SEED_NODES ; do
        ARGS+=" --seed-node=$NODE"
    done
fi

if [[ ! -z "$BRAVOD_WITNESS_NAME" ]]; then
    ARGS+=" --witness=\"$BRAVOD_WITNESS_NAME\""
fi

if [[ ! -z "$BRAVOD_MINER_NAME" ]]; then
    ARGS+=" --miner=[\"$BRAVOD_MINER_NAME\",\"$BRAVOD_PRIVATE_KEY\"]"
    ARGS+=" --mining-threads=$(nproc)"
fi

if [[ ! -z "$BRAVOD_PRIVATE_KEY" ]]; then
    ARGS+=" --private-key=$BRAVOD_PRIVATE_KEY"
fi

if [[ ! -z "$TRACK_ACCOUNT" ]]; then
    if [[ ! "$USE_WAY_TOO_MUCH_RAM" ]]; then
        ARGS+=" --enable-plugin=account_history"
    fi
    ARGS+=" --track-account-range=[\"$TRACK_ACCOUNT\",\"$TRACK_ACCOUNT\"]"
fi

NOW=`date +%s`
BRAVOD_FEED_START_TIME=`expr $NOW - 1209600`

ARGS+=" --follow-start-feeds=$BRAVOD_FEED_START_TIME"

# overwrite local config with image one
if [[ "$USE_FULL_WEB_NODE" ]]; then
  cp /etc/bravod/fullnode.config.ini $HOME/config.ini
else
  cp /etc/bravod/config.ini $HOME/config.ini
fi

chown bravod:bravod $HOME/config.ini

if [[ ! -d $HOME/blockchain ]]; then
    if [[ -e /var/cache/bravod/blocks.tbz2 ]]; then
        # init with blockchain cached in image
        ARGS+=" --replay-blockchain"
        mkdir -p $HOME/blockchain/database
        cd $HOME/blockchain/database
        tar xvjpf /var/cache/bravod/blocks.tbz2
        chown -R bravod:bravod $HOME/blockchain
    fi
fi

if [[ "$REPLAY_BLOCKCHAIN" ]]; then
	ARGS+=" --replay-blockchain "
fi

# without --data-dir it uses cwd as datadir(!)
# who knows what else it dumps into current dir
cd $HOME

if [[ "$USE_PUBLIC_SHARED_MEMORY" ]]; then
  echo bravod: Downloading and uncompressing blockchain-$VERSION-latest.tar.bz2 - this may take awhile.
  # configure below line for bravo blockchain
  #wget -qO- https://s3.amazonaws.com/bravocoin-dev-blockchainstate/blockchain-$VERSION-latest.tar.bz2 | pbzip2 -m2000dc | tar x
fi

# slow down restart loop if flapping
sleep 1

mv /etc/nginx/nginx.conf /etc/nginx/nginx.original.conf
cp /etc/nginx/bravod.nginx.conf /etc/nginx/nginx.conf

#start multiple read-only instances based on the number of cores
#attach to the local interface since a proxy will be used to loadbalance
if [[ "$USE_MULTICORE_READONLY" ]]; then
    exec chpst -ubravod \
        $BRAVOD \
            --rpc-endpoint=127.0.0.1:8091 \
            --p2p-endpoint=0.0.0.0:2001 \
            --data-dir=$HOME \
            $ARGS \
            $BRAVOD_EXTRA_OPTS \
            2>&1 &
    # sleep for a moment to allow the writer node to be ready to accept connections from the readers
    sleep 30
    PORT_NUM=8092
    cp /etc/nginx/healthcheck.conf.template /etc/nginx/healthcheck.conf
    CORES=$(nproc)
    PROCESSES=$((CORES * 4))
    for (( i=2; i<=$PROCESSES; i++ ))
      do
        echo server 127.0.0.1:$PORT_NUM\; >> /etc/nginx/healthcheck.conf
        ((PORT_NUM++))
    done
    echo } >> /etc/nginx/healthcheck.conf
    PORT_NUM=8092
    for (( i=2; i<=$PROCESSES; i++ ))
      do
        exec chpst -ubravod \
        $BRAVOD \
          --rpc-endpoint=127.0.0.1:$PORT_NUM \
          --data-dir=$HOME \
          --read-forward-rpc=127.0.0.1:8091 \
          --read-only \
          2>&1 &
          ((PORT_NUM++))
          sleep 1
    done
    # start nginx now that the config file is complete with all endpoints
    # all of the read-only processes will connect to the write node onport 8091
    # nginx will balance all incoming traffic on port 8090
    rm /etc/nginx/sites-enabled/default
    cp /etc/nginx/healthcheck.conf /etc/nginx/sites-enabled/default
    /etc/init.d/fcgiwrap restart
    echo daemon off\; >> /etc/nginx/nginx.conf
    service nginx restart
elif [[ "$USE_NGINX_FRONTEND" ]]; then
    cp /etc/nginx/healthcheck.conf.template /etc/nginx/healthcheck.conf
    echo server 127.0.0.1:8091\; >> /etc/nginx/healthcheck.conf
    echo } >> /etc/nginx/healthcheck.conf
    rm /etc/nginx/sites-enabled/default
    cp /etc/nginx/healthcheck.conf /etc/nginx/sites-enabled/default
    /etc/init.d/fcgiwrap restart
    service nginx restart
    exec chpst -ubravod \
        $BRAVOD \
            --rpc-endpoint=0.0.0.0:8091 \
            --p2p-endpoint=0.0.0.0:2001 \
            --data-dir=$HOME \
            $ARGS \
            $BRAVOD_EXTRA_OPTS \
            2>&1
else
    exec chpst -ubravod \
        $BRAVOD \
            --rpc-endpoint=0.0.0.0:8090 \
            --p2p-endpoint=0.0.0.0:2001 \
            --data-dir=$HOME \
            $ARGS \
            $BRAVOD_EXTRA_OPTS \
            2>&1
fi
